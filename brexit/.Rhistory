hc_add_series(name = "Henry", data = df$hp) %>%
hc_add_theme(hc_theme_ft())
highchart() %>%
hc_title(text = "Peak Flow measures") %>%
hc_subtitle(text = "5-12 May 2016") %>%
hc_xAxis(categories = df$date) %>%
hc_add_series(name = "Gillian", data = df$gp) %>%
hc_add_series(name = "Henry", data = df$hp)
highchart() %>%
hc_title(text = "Peak Flow measures") %>%
hc_subtitle(text = "5-12 May 2016") %>%
hc_xAxis(categories = df$date) %>%
hc_yAxis(title = list(text = "Temperature") %>%
hc_add_series(name = "Gillian", data = df$gp) %>%
hc_add_series(name = "Henry", data = df$hp)
hc_yAxis(title = list(text = "Temperature")) %>%
highchart() %>%
hc_title(text = "Peak Flow measures") %>%
hc_subtitle(text = "5-12 May 2016") %>%
hc_xAxis(categories = df$date) %>%
hc_yAxis(title = list(text = "Temperature")) %>%
hc_add_series(name = "Gillian", data = df$gp) %>%
hc_add_series(name = "Henry", data = df$hp)
highchart() %>%
hc_title(text = "Peak Flow measures") %>%
hc_subtitle(text = "5-12 May 2016") %>%
hc_xAxis(categories = df$date) %>%
hc_yAxis(title = list(text = "Expiratory flow")) %>%
hc_add_series(name = "Gillian", data = df$gp) %>%
hc_add_series(name = "Henry", data = df$hp)
highchart() %>%
hc_title(text = "Peak Flow measures") %>%
hc_subtitle(text = "5-12 May 2016") %>%
hc_xAxis(categories = df$date) %>%
hc_yAxis(title = list(text = "Expiratory flow")) %>%
hc_add_series(name = "Gillian", data = df$gp) %>%
hc_add_series(name = "Henry", data = df$hp) %>%
hc_add_theme(hc_theme_538())
highchart() %>%
hc_title(text = "Peak Flow measures") %>%
hc_xAxis(categories = df$date) %>%
hc_yAxis(title = list(text = "Expiratory flow")) %>%
hc_add_series(name = "Gillian", data = df$gp) %>%
hc_add_series(name = "Henry", data = df$hp) %>%
hc_add_theme(hc_theme_538())
seq(as.POSIXct("1912-02-24 23:00:00"), as.POSIXct("1912-02-25 08:32:00"), by="hour")
seq(as.POSIXct("2016-05-05 00:00:00"), as.POSIXct("2016-05-12 12:00:00"), by="hour")
seq(as.POSIXct("2016-05-05 00:00:00"), as.POSIXct("2016-05-12 12:00:00"), by="12 hours")
gp <- c(350, 350, 340, 360, 340, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
hp <- c(560, NA, 620, 660, 630, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
date <- seq(as.POSIXct("2016-05-05 00:00:00"), as.POSIXct("2016-05-12 12:00:00"), by="12 hours")
df <- data.frame(date,gp,hp)
df
highchart() %>%
hc_title(text = "Peak Flow measures") %>%
hc_xAxis(categories = df$date) %>%
hc_yAxis(title = list(text = "Expiratory flow")) %>%
hc_add_series(name = "Gillian", data = df$gp) %>%
hc_add_series(name = "Henry", data = df$hp) %>%
hc_add_theme(hc_theme_538())
df$date <- format(as.POSIXct(df$, format = "%d%m%y)
df$date <- format(as.POSIXct(df$, format = "%d%m%y")
df$date <- format(as.POSIXct(df$date, format = "%d%m%y")
)
df
gp <- c(350, 350, 340, 360, 340, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
hp <- c(560, NA, 620, 660, 630, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
date <- seq(as.POSIXct("2016-05-05 00:00:00"), as.POSIXct("2016-05-12 12:00:00"), by="12 hours")
df <- data.frame(date,gp,hp)
df$date <- format(as.POSIXct(df$date, format = "%d%m%y"))
df
highchart() %>%
hc_title(text = "Peak Flow measures") %>%
hc_xAxis(categories = df$date) %>%
hc_yAxis(title = list(text = "Expiratory flow")) %>%
hc_add_series(name = "Gillian", data = df$gp) %>%
hc_add_series(name = "Henry", data = df$hp) %>%
hc_add_theme(hc_theme_538())
df$date <- format(df$date, format = "%d%m%y")
df
df$date <- as.Date(df$date, format = "%d%m%y")
df
gp <- c(350, 350, 340, 360, 340, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
hp <- c(560, NA, 620, 660, 630, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
date <- seq(as.POSIXct("2016-05-05 00:00:00"), as.POSIXct("2016-05-12 12:00:00"), by="12 hours")
df <- data.frame(date,gp,hp)
df$date <- as.Date(df$date, format = "%d%m%y")
df
highchart() %>%
hc_title(text = "Peak Flow measures") %>%
hc_xAxis(categories = df$date) %>%
hc_yAxis(title = list(text = "Expiratory flow")) %>%
hc_add_series(name = "Gillian", data = df$gp) %>%
hc_add_series(name = "Henry", data = df$hp) %>%
hc_add_theme(hc_theme_538())
gp <- c(350, 350, 340, 360, 340, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
hp <- c(560, NA, 620, 660, 630, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
date <- seq(as.POSIXct("2016-05-05 12:00:00"), as.POSIXct("2016-05-12 00:00:00"), by="12 hours")
df <- data.frame(date,gp,hp)
df$date <- as.Date(df$date, format = "%d%m%y")
df
gp <- c(350, 350, 340, 360, 340, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
hp <- c(560, NA, 620, 660, 630, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
date <- seq(as.POSIXct("2016-05-05 12:00:00"), as.POSIXct("2016-05-12 00:00:00"), by="12 hours")
df <- data.frame(date,gp,hp)
gp <- c(350, 350, 340, 360, 340, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
hp <- c(560, NA, 620, 660, 630, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
date <- seq(as.POSIXct("2016-05-05 12:00:00"), as.POSIXct("2016-05-12 00:00:00"), by="12 hours")
df <- data.frame(date,gp,hp)
date
date <- seq(as.POSIXct("2016-05-05 00:00:00"), as.POSIXct("2016-05-12 12:00:00"), by="12 hours")
df <- data.frame(date,gp,hp)
library(lubridate)
df$date <- ymd(df$date)
df
gp <- c(350, 350, 340, 360, 340, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
hp <- c(560, NA, 620, 660, 630, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)
date <- seq(as.POSIXct("2016-05-05 00:00:00"), as.POSIXct("2016-05-12 12:00:00"), by="12 hours")
df <- data.frame(date,gp,hp)
df
test <- ymd(df$date)
str(df)
df
highchart() %>%
hc_title(text = "Peak Flow measures") %>%
hc_xAxis(categories = df$date) %>%
hc_yAxis(title = list(text = "Expiratory flow")) %>%
hc_add_series(name = "Gillian", data = df$gp) %>%
hc_add_series(name = "Henry", data = df$hp) %>%
hc_add_theme(hc_theme_538())
age <- seq(20:70, by=5)
age <- seq(20,70, by=5)
age
F55 <- c(390,385,380,375,370,365,360,355,350,345,340)
df <- data.frame(age,F55,F60,F65,F70,F75,M60,M65,M70,M75,M80)
age <- seq(20,70, by=5)
F55 <- c(390,385,380,375,370,365,360,355,350,345,340)
F60 <- c(423,418,413,408,402,397,391,386,380,375,369)
F65 <- c(360,454,448,442,436,430,424,418,412,406,400)
F70 <- c(496,490,483,476,470,464,457,451,445,439,432)
F75 <- c(529,523,516,509,502,495,488,482,475,468,461)
M60 <- c(554,543,532,521,509,498,486,475,463,452,440)
M65 <- c(602,590,577,565,552,540,527,515,502,490,477)
M70 <- c(649,636,622,609,596,583,569,556,542,529,515)
M75 <- c(693,679,664,651,636,622,607,593,578,564,550)
M80 <- c(740,725,710,695,680,665,649,634,618,603,587)
df <- data.frame(age,F55,F60,F65,F70,F75,M60,M65,M70,M75,M80)
df
gender <- ("Female","Female","Female","Female","Female","Male","Male","Male","Male","Male")
age <- seq(20,70, by=5)
gender <- c("Female","Female","Female","Female","Female","Male","Male","Male","Male","Male")
F55 <- c(390,385,380,375,370,365,360,355,350,345,340)
F60 <- c(423,418,413,408,402,397,391,386,380,375,369)
F65 <- c(460,454,448,442,436,430,424,418,412,406,400)
F70 <- c(496,490,483,476,470,464,457,451,445,439,432)
F75 <- c(529,523,516,509,502,495,488,482,475,468,461)
M60 <- c(554,543,532,521,509,498,486,475,463,452,440)
M65 <- c(602,590,577,565,552,540,527,515,502,490,477)
M70 <- c(649,636,622,609,596,583,569,556,542,529,515)
M75 <- c(693,679,664,651,636,622,607,593,578,564,550)
M80 <- c(740,725,710,695,680,665,649,634,618,603,587)
df <- data.frame(age,gender,F55,F60,F65,F70,F75,M60,M65,M70,M75,M80)
age <- seq(20,70, by=5)
F55 <- c(390,385,380,375,370,365,360,355,350,345,340)
F60 <- c(423,418,413,408,402,397,391,386,380,375,369)
F65 <- c(460,454,448,442,436,430,424,418,412,406,400)
F70 <- c(496,490,483,476,470,464,457,451,445,439,432)
F75 <- c(529,523,516,509,502,495,488,482,475,468,461)
M60 <- c(554,543,532,521,509,498,486,475,463,452,440)
M65 <- c(602,590,577,565,552,540,527,515,502,490,477)
M70 <- c(649,636,622,609,596,583,569,556,542,529,515)
M75 <- c(693,679,664,651,636,622,607,593,578,564,550)
M80 <- c(740,725,710,695,680,665,649,634,618,603,587)
df <- data.frame(age,gender,F55,F60,F65,F70,F75,M60,M65,M70,M75,M80)
age <- seq(20,70, by=5)
F55 <- c(390,385,380,375,370,365,360,355,350,345,340)
F60 <- c(423,418,413,408,402,397,391,386,380,375,369)
F65 <- c(460,454,448,442,436,430,424,418,412,406,400)
F70 <- c(496,490,483,476,470,464,457,451,445,439,432)
F75 <- c(529,523,516,509,502,495,488,482,475,468,461)
M60 <- c(554,543,532,521,509,498,486,475,463,452,440)
M65 <- c(602,590,577,565,552,540,527,515,502,490,477)
M70 <- c(649,636,622,609,596,583,569,556,542,529,515)
M75 <- c(693,679,664,651,636,622,607,593,578,564,550)
M80 <- c(740,725,710,695,680,665,649,634,618,603,587)
df <- data.frame(age,F55,F60,F65,F70,F75,M60,M65,M70,M75,M80)
df
Library(tidyr)
library(tidyr)
test <- gather(df, value, -age)
test <- gather(df, age, value)
test
test <- gather(df, age, height)
test
test <- gather(df, height, value)
test
test <- gather(df, height, value, -age)
test
df
highchart() %>%
hc_title(text = "Normal Peak Flow measures") %>%
hc_xAxis(categories = df$age, title = list(text = "Age (years")) %>%
hc_yAxis(title = list(text = "PEF")) %>%
hc_add_series(name = "F55", data = df$F55) %>%
hc_add_series(name = "F60", data = df$F60) %>%
hc_add_series(name = "F65", data = df$F65) %>%
hc_add_series(name = "F70", data = df$F70) %>%
hc_add_series(name = "F75", data = df$F75) %>%
hc_add_theme(hc_theme_538())
library(shiny)
runGitHub("cat-lord/talks", subdir = "ICIAC16/repeat_locations/")
install.packages("data.tree")
library(networkD3)
Relationships<- data.frame(Parent=c("earth","earth","forest","forest","ocean","ocean","ocean","ocean"),
Child=c("ocean","forest","tree","sasquatch","fish","seaweed","mantis shrimp","sea monster"))
Relationships
library(data.tree)
tree <- FromDataFrameNetwork(Relationships)
tree
lol <- ToListExplicit(tree, unname = TRUE)
lol
diagonalNetwork(lol)
Relationships
diagonalNetwork(lol, fontSize = 10, opacity = 0.9)
hc <- hclust(dist(USArrests), "ave")
dendroNetwork(hc, height = 600)
diagonalNetwork(lol, fontSize = 10, opacity = 0.9)
shiny::runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
shiny::runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
library(networkD3)
Relationships<- data.frame(Parent=c("earth","earth","forest","forest","ocean","ocean","ocean","ocean"),
Child=c("ocean","forest","tree","sasquatch","fish","seaweed","mantis shrimp","sea monster"))
library(data.tree)
tree <- FromDataFrameNetwork(Relationships)
tree
lol <- ToListExplicit(tree, unname = TRUE)
diagonalNetwork(lol, fontSize = 10, opacity = 0.9)
Relationships
Relationships<- data.frame(Parent=c("earth","bog","forest","forest","ocean","ocean","ocean","ocean"),
Child=c("ocean","forest","tree","sasquatch","fish","seaweed","mantis shrimp","sea monster"))
library(data.tree)
tree <- FromDataFrameNetwork(Relationships)
tree
lol <- ToListExplicit(tree, unname = TRUE)
diagonalNetwork(lol, fontSize = 10, opacity = 0.9)
library(networkD3)
Relationships<- data.frame(Parent=c("earth","bog","forest","forest","ocean","ocean","ocean","ocean"),
Child=c("ocean","bog","tree","sasquatch","fish","seaweed","mantis shrimp","sea monster"))
library(data.tree)
tree <- FromDataFrameNetwork(Relationships)
tree
lol <- ToListExplicit(tree, unname = TRUE)
diagonalNetwork(lol, fontSize = 10, opacity = 0.9)
shiny::runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
shiny::runApp('Dropbox/Projects/siculo-norman')
library(networkD3)
src <- c("Gioacomo Balla", "Pierre Bonnard", "Georges Braque", "Paul Cezanne",
"Henri Gaudier-Brzeska", "Amedeo Modigiani", "Albert Gleizes",
"Ernst Ludwig Kirchner", "Jean Metzinger", "Howard Hodgkin",
"Auguste Renoir", "William Ratcliffe")
target <- c("Paul Cezanne", "Paul Cezanne", "Paul Cezanne", "Henri Gaudier-Brzeska",
"Albert Gleizes", "Albert Gleizes", "Ernst Ludwig Kirchner",
"Jean Metzinger", "Howard Hodgkin", "Auguste Renoir",
"William Ratcliffe", "Duncan Grant")
src
networkData <- data.frame(src, target)
networkData
simpleNetwork(networkData)
simpleNetwork(networkData, height = 1000, width = 1000)
simpleNetwork(networkData, linkColour = "#666", nodeColour = "#3182bd",
nodeClickColour = "#E34A33", textColour = "#3182bd", opacity = 0.6,
zoom = F)
simpleNetwork(networkData, linkColour = "#666", nodeColour = "#3182bd",
nodeClickColour = "#E34A33", textColour = "#3182bd", opacity = 0.6,
zoom = T)
simpleNetwork(networkData, linkColour = "#666", nodeColour = "#756bb1",
nodeClickColour = "#E34A33", textColour = "#3182bd", opacity = 0.6,
zoom = T)
simpleNetwork(networkData, linkColour = "#666", nodeColour = "#756bb1",
nodeClickColour = "#fdae6b", textColour = "#3182bd", opacity = 0.6,
zoom = T)
simpleNetwork(networkData, linkColour = "#666", nodeColour = "#636363",
nodeClickColour = "#fdae6b", textColour = "#3182bd", opacity = 0.6,
zoom = T)
simpleNetwork(networkData, linkColour = "#666", nodeColour = "#636363",
nodeClickColour = "#fdae6b", textColour = "#2ca25f", opacity = 0.6,
zoom = T)
simpleNetwork(networkData, linkColour = "#08519c", nodeColour = "#000000",
nodeClickColour = "#fdae6b", textColour = "#2ca25f", opacity = 0.6,
zoom = T)
simpleNetwork(networkData, linkColour = "#000000", nodeColour = "#08519c",
nodeClickColour = "#fdae6b", textColour = "#08519c", opacity = 1,
zoom = T)
simpleNetwork(networkData, linkColour = "#000000", nodeColour = "#08519c",
nodeClickColour = "#6baed6", textColour = "#08519c", opacity = 1,
zoom = T)
simpleNetwork(networkData, fontFamily = "sans-serif", linkColour = "#000000", nodeColour = "#08519c",
nodeClickColour = "#6baed6", textColour = "#08519c", opacity = 1,
zoom = T)
simpleNetwork(networkData, fontFamily = "helvetica", linkColour = "#000000", nodeColour = "#08519c",
nodeClickColour = "#6baed6", textColour = "#08519c", opacity = 1,
zoom = T)
simpleNetwork(networkData, fontFamily = "Courier New", linkColour = "#000000", nodeColour = "#08519c",
nodeClickColour = "#6baed6", textColour = "#08519c", opacity = 1,
zoom = T)
simpleNetwork(networkData, fontFamily = "Courier New", linkColour = "#000000", nodeColour = "#525252",
nodeClickColour = "#f16913", textColour = "#08519c", opacity = 1,
zoom = T)
simpleNetwork(networkData, fontFamily = "Courier New", linkColour = "#000000", nodeColour = "#bdbdbd",
nodeClickColour = "#f16913", textColour = "#08519c", opacity = 1,
zoom = T)
simpleNetwork(networkData, fontFamily = "Courier New", linkColour = "#525252", nodeColour = "#bdbdbd",
nodeClickColour = "#f16913", textColour = "#08519c", opacity = 1,
zoom = T)
simpleNetwork(networkData, fontFamily = "Courier New", linkColour = "#525252", nodeColour = "#bdbdbd",
nodeClickColour = "#f16913", textColour = "#000000", opacity = 1,
zoom = T)
src <- c("Gioacomo Balla", "Pierre Bonnard", "Georges Braque", "Paul  Cézanne",
"Henri Gaudier-Brzeska", "Amedeo Modigiani", "Albert Gleizes",
"Ernst Ludwig Kirchner", "Jean Metzinger", "Howard Hodgkin",
"Auguste Renoir", "William Ratcliffe")
target <- c("Paul  Cézanne", "Paul  Cézanne", "Paul  Cézanne", "Henri Gaudier-Brzeska",
"Albert Gleizes", "Albert Gleizes", "Ernst Ludwig Kirchner",
"Jean Metzinger", "Howard Hodgkin", "Auguste Renoir",
"William Ratcliffe", "Duncan Grant")
networkData <- data.frame(src, target)
# Plot
simpleNetwork(networkData, fontFamily = "Courier New", linkColour = "#525252", nodeColour = "#bdbdbd",
nodeClickColour = "#f16913", textColour = "#000000", opacity = 1,
zoom = T)
simpleNetwork(networkData, fontFamily = "Courier New", linkColour = "#525252", nodeColour = "#bdbdbd",
nodeClickColour = "#f16913", textColour = "#000000", opacity = 1,
zoom = T, height = 600)
install.packages(c("BH", "DBI", "flexdashboard", "formatR", "gdalUtils", "git2r", "highr", "knitr", "nlme", "openssl", "plotly", "plotrix", "psych", "RcppArmadillo", "rgeos", "Rttf2pt1", "spatstat", "survival", "zoo"))
library(networkD3)
library(networkD3)
Relationships<- data.frame(Parent=c("earth","earth","forest","forest","ocean","ocean","ocean","ocean"),
Child=c("ocean","forest","tree","sasquatch","fish","seaweed","mantis shrimp","sea monster"))
library(data.tree)
tree <- FromDataFrameNetwork(Relationships)
tree
lol <- ToListExplicit(tree, unname = TRUE)
diagonalNetwork(lol, fontSize = 10, opacity = 0.9)
library(shiny)
runGitHub("cat-lord/crime_analysis", subdir = "shinyapps/basic_choropleth_map/")
install.packages(c("nlme", "survival"))
library(shiny)
runGitHub("cat-lord/crime_analysis", subdir = "shinyapps/basic_choropleth_map/")
library(shiny)
install.packages("shiny")
install.packages("rgdal")
install.packages("networkD3")
library(shiny)
runGitHub("cat-lord/crime_analysis", subdir = "shinyapps/basic_choropleth_map/")
install.packages("dplyr")
library(shiny)
runGitHub("cat-lord/crime_analysis", subdir = "shinyapps/basic_choropleth_map/")
install.packages("leaflet")
library(shiny)
runGitHub("cat-lord/crime_analysis", subdir = "shinyapps/basic_choropleth_map/")
library(networkD3)
Relationships<- data.frame(Parent=c("earth","earth","forest","forest","ocean","ocean","ocean","ocean"),
Child=c("ocean","forest","tree","sasquatch","fish","seaweed","mantis shrimp","sea monster"))
library(data.tree)
tree <- FromDataFrameNetwork(Relationships)
tree
lol <- ToListExplicit(tree, unname = TRUE)
diagonalNetwork(lol, fontSize = 10, opacity = 0.9)
install.packages("data.tree")
shiny::runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
library(shiny) ; library(leaflet)
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
shiny::runApp('Dropbox/Projects/siculo-norman')
shiny::runApp('Dropbox/Projects/siculo-norman')
shiny::runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
runApp('Dropbox/Projects/siculo-norman')
scores <- data.frame("Label"=c("Personal Relationships and Support Networks",
"Health and Wellbeing",
"Thinking Skills Attitudes and Behaviour",
"Friends, Support and Activities",
"Education and Work",
"Home and Money"),
"Now" = c(5, 4, 5, 3, 4, 4),
"Three-months" = c(2, 1, 0, 1, 1, 3),
"Reassessment" = c(3, 2, 0, 1, 1, 4))
names(scores)
install.packages("readr")
library(highcharter)
library(highcharter)
data(worldgeojson, package = "highcharter")
View(data@worldgeojson)
View(worldgeojson@data)
worldgeojson@data
map <- data(worldgeojson, package = "highcharter")
map@data
head(map@data, 4)
plot(map)
View(map@data, 4)
attributes(map)
attributes(worldgeojson)
View(map@data[features])
worldgeojson@data[features])
worldgeojson@data[features]
worldgeojson$features
attributes(worldgeojson)
worldgeojson$type
attributes(worldgeojson)
worldgeojson$crs
worldgeojson$hc-transform
head(worldgeojson$features)
head(worldgeojson$features$properties$name)
worldgeojson$features$properties$name
worldgeojson$features$[[6]]
worldgeojson$features[[6]]
worldgeojson$features
worldgeojson$id
install.packages("googleVis")
library(googleVis)
require(datasets)
states <- data.frame(state.name, state.x77)
GeoStates <- gvisGeoChart(states, "state.name", "Illiteracy",
options=list(region="US",
displayMode="regions",
resolution="provinces",
width=600, height=400))
plot(GeoStates)
states
library("viridisLite")
data(worldgeojson, package = "highcharter")
data("GNI2010", package = "treemap")
GNI2010
dshmstops <- data.frame(q = c(0, exp(1:5)/exp(5)),
c = substring(viridis(5 + 1, option = "D"), 0, 7)) %>%
list.parse2()
library(highcharter)
dshmstops <- data.frame(q = c(0, exp(1:5)/exp(5)),
c = substring(viridis(5 + 1, option = "D"), 0, 7)) %>%
list.parse2()
dshmstops
highchart() %>%
hc_add_series_map(worldgeojson, GNI2010, value = "population", joinBy = "iso3") %>%
hc_colorAxis(stops = dshmstops) %>%
hc_legend(enabled = TRUE) %>%
hc_add_theme(hc_theme_db()) %>%
hc_mapNavigation(enabled = TRUE)
data("GNI2010", package = "treemap")
library(treemap)
install.packages("treemap")
library(treemap)
data("GNI2010", package = "treemap")
library(viridisLite)
data(worldgeojson, package = "highcharter")
data("GNI2010", package = "treemap")
shiny::runApp('Dropbox/R/Shiny/apps/services')
library(shiny)
runGitHub("cat-lord/crime_analysis", subdir = "shinyapps/basic_choropleth_map/")
setwd("~/Desktop/brexit")
library(flexdashboard)
library(shiny)
library(rgdal)
library(leaflet)
library(dplyr)
library(RColorBrewer)
library(highcharter)
boundaries <- readOGR(".", "local_authorities", verbose = FALSE)
names(boundaries@data)
round(sum(boundaries$Leave) / sum(boundaries$VTS_Cst) * 100)
round(sum(boundaries$VTS_Cst) / sum(boundaries$Leave) * 100)
sum(boundaries$VTS_Cst)
boundaries$VTS_Cst
round(sum(boundaries$Vts_Cst) / sum(boundaries$Leave) * 100)
round(sum(boundaries$Leave) / sum(boundaries$Vts_Cst) * 100)
round(sum(boundaries$Leave) / sum(boundaries$Vts_Cst) * 100, 1)
round(sum(boundaries$Remain) / sum(boundaries$Vts_Cst) * 100, 1)
round(sum(boundaries$Vts_Cst) / sum(boundaries$Electrt) * 100, 1)
